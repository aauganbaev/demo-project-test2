pipeline {
    agent any
    parameters {
        string(name: 'TEST_TYPE', defaultValue: '@smoke', description: 'Type of test to run', trim: true)
        choice(name: 'BROWSER', choices: ['chrome', 'remote-chrome', 'firefox'], description: 'Browser to test')
        choice(name: 'ENV_TYPE', choices: ['QA1', 'QA2', 'DEV'], description: 'Environments to test')
    }
    triggers {
        cron('H 6 * * 1-5')
    }
    stages {
        stage('Clone code') {
            steps {
                git 'https://github.com/Cydeo-B38/selenum-grid-demo'
            }
        }

        stage('Run tests') {
            steps {
                script {
                    if (isUnix()) { // MacOs or linux based --sh - shell
                        sh "mvn clean test -Dcucumber.filter.tags=${params.TEST_TYPE} -DBROWSER=${params.BROWSER} -Denv=${params.ENV_TYPE}"
                    } else { // Windows --bat - batch
                        bat "mvn clean test -Dcucumber.filter.tags=${params.TEST_TYPE} -DBROWSER=${params.BROWSER} -Denv=${params.ENV_TYPE}"
                    }
                }
            }
        }

        stage('Generate report') {
            steps {
                cucumber(
                    failedFeaturesNumber: -1,
                    failedScenariosNumber: -1,
                    failedStepsNumber: -1,
                    fileIncludePattern: '**/*.json',
                    pendingStepsNumber: -1,
                    skippedStepsNumber: -1,
                    sortingMethod: 'ALPHABETICAL',
                    undefinedStepsNumber: -1
                )
            }
        }
    }
}



